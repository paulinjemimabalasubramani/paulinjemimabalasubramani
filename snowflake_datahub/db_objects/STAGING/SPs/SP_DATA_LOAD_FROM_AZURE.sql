CREATE OR REPLACE PROCEDURE DATAHUB.STAGING.SP_DATA_LOAD_FROM_AZURE("I_PIPELINE_NAME" VARCHAR(100), "I_PIPELINE_RUN_ID" VARCHAR(100), "I_SOURCE_OF_DATA" VARCHAR(100), "I_FILE_NAME" VARCHAR(300))
RETURNS VARCHAR
LANGUAGE SQL
EXECUTE AS CALLER
AS 'DECLARE 
 FILE_DETAIL_AVAILABLE NUMBER;
 FILEID NUMBER;
 FILENAME VARCHAR;
 MULTILINE_FLG VARCHAR;
 COLUMN_COUNT NUMBER;
 FIXED_LINE_LENGTH NUMBER;
 ERROR_MSG VARCHAR(250);
 FILEFORMAT VARCHAR(30);
 REC_LENGTH NUMBER;
 COPY_COMMAND VARCHAR;
 STG_TABLE VARCHAR;
 TARGET_TABLE VARCHAR;
 FILE_PATH VARCHAR;
 LOAD_TYPE VARCHAR;
 SOURCE_SYSCODE VARCHAR;
 SUBJECT_AREACODE VARCHAR;
 BRONZE_ELT_COLUMNS VARCHAR;
 SOURCE_COLUMNS VARCHAR;
 HASHKEY VARCHAR;
 STAGE_COPPY_COMMAND VARCHAR;
 BRONZE_INSERT_QUERY VARCHAR;
 STAGE_DELETE_QUERY VARCHAR;
 START_TIME TIMESTAMP;
 COPY_COMMAND_RESULT VARCHAR;
 BRONZE_INSERT_QUERY_RESULT VARCHAR;
 STAGE_DELETE_QUERY_RESULT VARCHAR;
 TASK_NUMBER NUMBER :=0;
 PRIMARY_KEY_COLUMNS VARCHAR;
 ERROR_LOG VARCHAR:=''SELECT PIPELINE_RUN_ID,TASK_NAME,START_TIME,END_TIME,EXECUTING_CODE,ERROR_TEXT FROM DATAHUB.PIPELINE_METADATA.PIPELINE_TASK_AUDIT_LOG WHERE PIPELINE_RUN_ID= ''''''||:I_PIPELINE_RUN_ID||''''''  ORDER BY START_TIME DESC'';
 BEGIN 
-----------Pre validation begin-----------------------
BEGIN
CREATE OR REPLACE TABLE DATAHUB.PIPELINE_METADATA.TEMP_DATA_FEED_FILE_INVENTORY
AS
SELECT 
FILE_ID,
FILE_NAME,
MULTI_LINE_FLG,
NUMBER_OF_COLUMNS_COUNT,
RECORD_FORMAT_LENGTH_NUMBER,
FILE_FORMAT,
COPY_COMMAND_TEXT,
FILE_STORAGE_LOCATION_TEXT,
STG_DATABASE_NAME||''.''||STG_SCHEMA_NAME||''.''||STG_TABLE_NAME AS STG_TABLE_NAME,
TARGET_DATABASE_NAME||''.''||TARGET_SCHEMA_NAME||''.''||TARGET_TABLE_NAME AS TARGET_TABLE_NAME,
FULL_LOAD_FLG,
SOURCE_SYS_CODE,
SUBJECT_AREA_CODE,
CASE
WHEN SOURCE_PRIMARY_KEY IS NOT NULL THEN
''SHA2(CONCAT(COALESCE(''||REPLACE(SOURCE_PRIMARY_KEY,'','','',''''N/A''''),COALESCE('')||'',''''N/A'''')))''
ELSE SOURCE_PRIMARY_KEY
END SOURCE_PRIMARY_KEY
FROM DATAHUB.PIPELINE_METADATA.DATA_FEED_FILE_INVENTORY 
WHERE UPPER(FILE_NAME_PREFIX)=UPPER(REGEXP_REPLACE(:I_FILE_NAME, ''[^_]+$'', '''')) AND SOURCE_SYS_CODE=:I_SOURCE_OF_DATA 
AND ACTIVE_FLG=''Y'' ;

SELECT 
FILE_ID,
FILE_NAME,
MULTI_LINE_FLG,
NUMBER_OF_COLUMNS_COUNT,
RECORD_FORMAT_LENGTH_NUMBER,
FILE_FORMAT,
COPY_COMMAND_TEXT,
FILE_STORAGE_LOCATION_TEXT,
STG_TABLE_NAME,
TARGET_TABLE_NAME,
FULL_LOAD_FLG,
SOURCE_SYS_CODE,
SUBJECT_AREA_CODE,
SOURCE_PRIMARY_KEY

INTO

FILEID,
FILENAME,
MULTILINE_FLG,
COLUMN_COUNT,
FIXED_LINE_LENGTH,
FILEFORMAT,
COPY_COMMAND,
FILE_PATH,
STG_TABLE,
TARGET_TABLE,
LOAD_TYPE,
SOURCE_SYSCODE,
SUBJECT_AREACODE,
PRIMARY_KEY_COLUMNS
FROM  DATAHUB.PIPELINE_METADATA.TEMP_DATA_FEED_FILE_INVENTORY;

/*
CALL DATAHUB.STAGING.SP_AZURE_TO_SNOWFLAKE_DATA_LOAD_PRE_VALIDATION(:I_PIPELINE_NAME, :I_PIPELINE_RUN_ID,:I_SOURCE_OF_DATA,:I_FILE_NAME);
*/
END;
-----------Pre validation end-------------------------
-----------data load into stgae begin-----------------
    BEGIN 

        SELECT CURRENT_TIMESTAMP INTO :START_TIME;
        TASK_NUMBER := :TASK_NUMBER+1;
        CALL DATAHUB.PIPELINE_METADATA.SP_PIPELINE_TASK_AUDIT_LOG
        (:I_PIPELINE_RUN_ID ,:TASK_NUMBER ,''STAGE_DATA_LOAD'' ,:START_TIME ,NULL,NULL,NULL ,NULL);
         
        STAGE_COPPY_COMMAND := REPLACE(REPLACE(
                REPLACE(
                REPLACE(:COPY_COMMAND,''(source)'',:I_SOURCE_OF_DATA)
                ,''(file_name)'',:I_FILE_NAME)
                ,''(storage_location)'',:FILE_PATH),''(PIPELINE_RUN_ID)'',''''''''||:I_PIPELINE_RUN_ID||'''''''');

        EXECUTE IMMEDIATE STAGE_COPPY_COMMAND;
        
       select TO_VARCHAR(OBJECT_CONSTRUCT(*)) INTO :COPY_COMMAND_RESULT from table(result_scan(last_query_id()));

        --RETURN :COPY_COMMAND_RESULT ;
        
        CALL DATAHUB.PIPELINE_METADATA.SP_PIPELINE_TASK_AUDIT_LOG
        (:I_PIPELINE_RUN_ID ,:TASK_NUMBER ,''STAGE_DATA_LOAD'' ,:START_TIME ,CURRENT_TIMESTAMP ,:STAGE_COPPY_COMMAND,:COPY_COMMAND_RESULT,''SUCCESS'');

        EXCEPTION
            WHEN OTHER THEN
                LET ERROR_MESSAGE VARCHAR:=''Error in STAGE_DATA_LOAD :''||SQLERRM;
                CALL DATAHUB.PIPELINE_METADATA.SP_PIPELINE_TASK_AUDIT_LOG
                (:I_PIPELINE_RUN_ID ,:TASK_NUMBER ,''STAGE_DATA_LOAD'' ,:START_TIME ,CURRENT_TIMESTAMP ,:STAGE_COPPY_COMMAND,:COPY_COMMAND_RESULT,:ERROR_MESSAGE);

                CALL DATAHUB.PIPELINE_METADATA.SP_EMAIL_NOTIFICATION(''SUBBARAO.TAIDALA@OSAIC.COM'',CURRENT_ACCOUNT_NAME()||'':CRITICAL:''||:I_SOURCE_OF_DATA||'':''||:I_FILE_NAME||'':FAILURE_IN_STAGE_DATA_LOAD'',''SQL'',''ENV=''||CURRENT_ACCOUNT_NAME()||'':SOURCE=''||:I_SOURCE_OF_DATA||'':FILE_NAME=''||:I_FILE_NAME||'':PIPELINE_RUN_ID=''||:I_PIPELINE_RUN_ID||'':DATE_TIME=''||CURRENT_DATE,:ERROR_LOG);
                
                
                RETURN ''Process failed in - STAGE_DATA_LOAD ==>''||:ERROR_MESSAGE;

    END;
-----------data load into stgae end-----------------
-----------data load into Bronze begin--------------
    BEGIN

        SELECT CURRENT_TIMESTAMP INTO :START_TIME;
        TASK_NUMBER := :TASK_NUMBER+1;
        CALL DATAHUB.PIPELINE_METADATA.SP_PIPELINE_TASK_AUDIT_LOG
        (:I_PIPELINE_RUN_ID ,:TASK_NUMBER ,''BRONZE_DATA_LOAD'' ,:START_TIME ,NULL,NULL,NULL ,NULL);

        SELECT  
        LISTAGG(COLUMN_NAME,'','') WITHIN GROUP (ORDER BY COLUMN_NAME),
        LISTAGG(''COALESCE(''||COLUMN_NAME||'',''''N/A'''')'','','') WITHIN GROUP (ORDER BY COLUMN_NAME)
        INTO
        :SOURCE_COLUMNS,
        :HASHKEY
        FROM DATAHUB.PIPELINE_METADATA.INGESTION_TABLE_SCHEMA
        WHERE DATABASE_NAME||''.''||STAGE_TABLE_SCHEMA||''.''||STAGE_TABLE_NAME=:STG_TABLE;
        
		
		
        IF (IFNULL(:SOURCE_COLUMNS,'''')='''') THEN
            CALL DATAHUB.PIPELINE_METADATA.SP_PIPELINE_TASK_AUDIT_LOG
                (:I_PIPELINE_RUN_ID ,:TASK_NUMBER ,''BRONZE_DATA_LOAD'' ,:START_TIME ,CURRENT_TIMESTAMP ,NULL,:SOURCE_COLUMNS,''BRONZE_DATA_LOAD-Source columns are not available in reference  table'');
                RETURN ''BRONZE_DATA_LOAD-Source columns are not available in reference table'';
        END IF;
        
		SELECT REPLACE(REPLACE(REPLACE(TO_VARCHAR(DATAHUB.PIPELINE_METADATA.get_elt_columns(''BRONZE'',''N'')),''"'',''''),''['',''''),'']'','''') INTO :BRONZE_ELT_COLUMNS ;
		
    

       BRONZE_INSERT_QUERY:=''INSERT INTO ''||:TARGET_TABLE ||'' ( ''||:SOURCE_COLUMNS||'',''||:BRONZE_ELT_COLUMNS||'' )  ''
         ||'' SELECT ''
         ||:SOURCE_COLUMNS||'',''''''
		 ||:I_PIPELINE_NAME||'''''',PIPELINE_RUN_ID,FILE_ROW_NUMBER,CURRENT_DATE,''''''
		 ||:SOURCE_SYSCODE||'''''',''''''
		 ||:SUBJECT_AREACODE||'''''',''''''
		 ||:LOAD_TYPE||'''''',IFNULL (''
         ||:PRIMARY_KEY_COLUMNS||'',SHA2(CONCAT(''||:HASHKEY||''))),''
		 ||''SHA2(CONCAT(''||:HASHKEY||'')),''
         ||:FILEID||'',CURRENT_TIMESTAMP,CURRENT_ROLE(),CURRENT_TIMESTAMP,
           CURRENT_ROLE(),CURRENT_TIMESTAMP''
         ||'' FROM ''||:STG_TABLE || '' WHERE PIPELINE_RUN_ID =''''''||:I_PIPELINE_RUN_ID||'''''''';
         
        
         EXECUTE IMMEDIATE BRONZE_INSERT_QUERY;
		 
		 select TO_VARCHAR(OBJECT_CONSTRUCT(*)) INTO :BRONZE_INSERT_QUERY_RESULT from table(result_scan(last_query_id()));

            CALL DATAHUB.PIPELINE_METADATA.SP_PIPELINE_TASK_AUDIT_LOG
            (:I_PIPELINE_RUN_ID ,:TASK_NUMBER ,''BRONZE_DATA_LOAD'' ,:START_TIME ,CURRENT_TIMESTAMP,:BRONZE_INSERT_QUERY ,:BRONZE_INSERT_QUERY_RESULT,''SUCCESS'');


        EXCEPTION
                WHEN OTHER THEN
                LET ERROR_MESSAGE VARCHAR:=''Error in BRONZE_DATA_LOAD :''||SQLERRM;
                CALL DATAHUB.PIPELINE_METADATA.SP_PIPELINE_TASK_AUDIT_LOG
                (:I_PIPELINE_RUN_ID ,:TASK_NUMBER ,''BRONZE_DATA_LOAD'' ,:START_TIME ,CURRENT_TIMESTAMP,:BRONZE_INSERT_QUERY,:BRONZE_INSERT_QUERY_RESULT ,''Error in BRONZE_DATA_LOAD :''||:SQLERRM);

				              CALL DATAHUB.PIPELINE_METADATA.SP_EMAIL_NOTIFICATION(''SUBBARAO.TAIDALA@OSAIC.COM'',CURRENT_ACCOUNT_NAME()||'':CRITICAL:''||:I_SOURCE_OF_DATA||'':''||:I_FILE_NAME||'':FAILURE_IN_BRONZE_DATA_LOAD'',''SQL'',''ENV=''||CURRENT_ACCOUNT_NAME()||'':SOURCE=''||:I_SOURCE_OF_DATA||'':FILE_NAME=''||:I_FILE_NAME||'':PIPELINE_RUN_ID=''||:I_PIPELINE_RUN_ID||'':DATE_TIME=''||CURRENT_DATE,:ERROR_LOG);
                /*
                CALL SYSTEM$SEND_EMAIL(
                      ''DATAHUB_EMAIL_NOTIFIACTION'',
                      ''SUBBARAO.TAIDALA@OSAIC.COM'',
                      ''ACTION (CRITICAL): AZURE STORAGE TO SNOWFLAKE DATA LOAD FAILURE'',
                      :ERROR_MESSAGE);
                */
                RAISE;
                RETURN ''Process failed in BRONZE_DATA_LOAD==>''||:ERROR_MESSAGE;

    END;
-----------data load into Bronze end-----------------
-----------Delete data from stage begin---------------
    BEGIN
        SELECT CURRENT_TIMESTAMP INTO :START_TIME;
        TASK_NUMBER := :TASK_NUMBER+1;
        CALL DATAHUB.PIPELINE_METADATA.SP_PIPELINE_TASK_AUDIT_LOG
        (:I_PIPELINE_RUN_ID ,:TASK_NUMBER ,''DELETE_STAGE_DATA'' ,:START_TIME ,NULL,NULL,NULL ,NULL);
        
        STAGE_DELETE_QUERY:=''DELETE FROM ''||:STG_TABLE||'' WHERE PIPELINE_RUN_ID =''''''||:I_PIPELINE_RUN_ID||'''''''';

        EXECUTE IMMEDIATE STAGE_DELETE_QUERY;

        select TO_VARCHAR(OBJECT_CONSTRUCT(*)) INTO :STAGE_DELETE_QUERY_RESULT from table(result_scan(last_query_id()));

        --RETURN STAGE_DELETE_QUERY;
        
        CALL DATAHUB.PIPELINE_METADATA.SP_PIPELINE_TASK_AUDIT_LOG
        (:I_PIPELINE_RUN_ID ,:TASK_NUMBER ,''DELETE_STAGE_DATA'' ,:START_TIME ,CURRENT_TIMESTAMP,:STAGE_DELETE_QUERY ,:STAGE_DELETE_QUERY_RESULT,''SUCCESS'');

        EXCEPTION
            WHEN OTHER THEN
                LET ERROR_MESSAGE VARCHAR:=''Error in DELETE_STAGE_DATA :''||SQLERRM;
                CALL DATAHUB.PIPELINE_METADATA.SP_PIPELINE_TASK_AUDIT_LOG
                (:I_PIPELINE_RUN_ID ,:TASK_NUMBER ,''DELETE_STAGE_DATA'' ,:START_TIME ,CURRENT_TIMESTAMP,:STAGE_DELETE_QUERY ,:STAGE_DELETE_QUERY_RESULT,:ERROR_MESSAGE);
				        CALL DATAHUB.PIPELINE_METADATA.SP_EMAIL_NOTIFICATION(''SUBBARAO.TAIDALA@OSAIC.COM'',''ACTION (CRITICAL): AZURE STORAGE TO SNOWFLAKE DATA LOAD FAILURE'',''TEXT'',:ERROR_MESSAGE);

                RETURN ''Process failed in DELETE_STAGE_DATA==>''||:ERROR_MESSAGE;
    END;
DROP TABLE IF EXISTS DATAHUB.PIPELINE_METADATA.TEMP_DATA_FEED_FILE_INVENTORY;
-----------Delete data from stage end-----------------
END';